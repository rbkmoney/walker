/*
 * This file is generated by jOOQ.
*/
package com.rbkmoney.walker.domain.generated.tables;


import com.rbkmoney.walker.domain.generated.Keys;
import com.rbkmoney.walker.domain.generated.Walk;
import com.rbkmoney.walker.domain.generated.tables.records.ClaimRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Claim extends TableImpl<ClaimRecord> {

    private static final long serialVersionUID = -677341643;

    /**
     * The reference instance of <code>walk.claim</code>
     */
    public static final Claim CLAIM = new Claim();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ClaimRecord> getRecordType() {
        return ClaimRecord.class;
    }

    /**
     * The column <code>walk.claim.id</code>.
     */
    public final TableField<ClaimRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>walk.claim.event_id</code>.
     */
    public final TableField<ClaimRecord, Long> EVENT_ID = createField("event_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>walk.claim.revision</code>.
     */
    public final TableField<ClaimRecord, Long> REVISION = createField("revision", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>walk.claim.assigned</code>.
     */
    public final TableField<ClaimRecord, String> ASSIGNED = createField("assigned", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>walk.claim.status</code>.
     */
    public final TableField<ClaimRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>walk.claim.description</code>.
     */
    public final TableField<ClaimRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>walk.claim.reason</code>.
     */
    public final TableField<ClaimRecord, String> REASON = createField("reason", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>walk.claim.changes</code>.
     */
    public final TableField<ClaimRecord, Object> CHANGES = createField("changes", org.jooq.impl.DefaultDataType.getDefaultDataType("jsonb"), this, "");

    /**
     * Create a <code>walk.claim</code> table reference
     */
    public Claim() {
        this("claim", null);
    }

    /**
     * Create an aliased <code>walk.claim</code> table reference
     */
    public Claim(String alias) {
        this(alias, CLAIM);
    }

    private Claim(String alias, Table<ClaimRecord> aliased) {
        this(alias, aliased, null);
    }

    private Claim(String alias, Table<ClaimRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Walk.WALK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ClaimRecord> getPrimaryKey() {
        return Keys.CLAIM_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ClaimRecord>> getKeys() {
        return Arrays.<UniqueKey<ClaimRecord>>asList(Keys.CLAIM_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Claim as(String alias) {
        return new Claim(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Claim rename(String name) {
        return new Claim(name, null);
    }
}
